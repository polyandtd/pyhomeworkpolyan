#Задание 1. Дан список с визитами по городам и странам. Напишите код, который возвращает отфильтрованный список geo_logs, содержащий только визиты из России. Считайте, что список geo_logs легко помещается в оперативной памяти.

geo_logs = [
    {'visit1': ['Москва', 'Россия']},
    {'visit2': ['Дели', 'Индия']},
    {'visit3': ['Владимир', 'Россия']},
    {'visit4': ['Лиссабон', 'Португалия']},
    {'visit5': ['Париж', 'Франция']},
    {'visit6': ['Лиссабон', 'Португалия']},
    {'visit7': ['Тула', 'Россия']},
    {'visit8': ['Тула', 'Россия']},
    {'visit9': ['Курск', 'Россия']},
    {'visit10': ['Архангельск', 'Россия']}
] 
for i in range(10):
    y = geo_logs[i]
    z = str(y.values())
    if 'Россия' in z:
        print (y)
        
#Задание 2. Выведите на экран все уникальные гео-ID из значений словаря ids.

ids = {'user1': [213, 213, 213, 15, 213], 'user2': [54, 54, 119, 119, 119], 'user3': [213, 98, 98, 35]}
nums = list(ids['user1'] + ids['user2'] + ids['user3'])
y = list(set(nums)) #переменная заведена для удобства
print(y)

#Задание 3. Список поисковых запросов. Получить распределение количества слов в них. Т. е. поисковых запросов из одного слова 5%, из двух - 7%, из трех - 3% итд.

word = 0
words2 = 0
words3 = 0
more = 0

queries = [
    'смотреть сериалы онлайн',
    'новости спорта',
    'афиша кино',
    'курс доллара',
    'сериалы этим летом',
    'курс по питону',
    'сериалы про спорт',
]
cnt = 0
for i in queries:
    y = str(queries[cnt])
    if y.count(' ') == 0:
        word += 1
    if y.count(' ') == 1:
        words2 += 1
    if y.count(' ') == 2:
        words3 += 1
    if y.count(' ') > 2:
        more += 1
    cnt+=1
a == (word/cnt)*100
b == (words2 / cnt) * 100
c ==(words3 / cnt) * 100
d == (more / cnt) * 100
print(('Поисковых запросов из одного слова - {}%, из двух - {}%, из трёх - {}%, от четырёх и более - {}%').format(int(a), int(b), int(c), int(d)))

#Задание 4. Дана статистика рекламных каналов по объемам продаж. Напишите скрипт, который возвращает название канала с максимальным объемом.

## max value in a dictionary
stats = {'facebook': 55, 'yandex': 120, 'vk': 115, 'google': 99, 'email': 42, 'ok': 98}
for i in range(6):
    y = list(stats)[i]
    z = stats[y]
    if str(max(stats.values())) in str(z):
        print (y)

#Задание 5. Дан поток логов по количеству просмотренных страниц для каждого пользователя. Список отсортирован по ID пользователя. Вам необходимо написать алгоритм, который считает среднее значение просмотров на пользователя. Т. е. надо посчитать отношение суммы всех просмотров к количеству уникальных пользователей. Учтите, что весь список stream не помещается в оперативную память, т. е. его нужно обрабатывать поэлементно в цикле.

### условия к строкам проработаны исходя из 'дано'
stream = [
    '2018-01-01,user1,3',
    '2018-01-07,user1,4',
    '2018-03-29,user1,1',
    '2018-04-04,user1,13',
    '2018-01-05,user2,7',
    '2018-06-14,user3,4',
    '2018-07-02,user3,10',
    '2018-03-21,user4,19',
    '2018-03-22,user4,4',
    '2018-04-22,user4,8',
    '2018-05-03,user4,9',
    '2018-05-11,user4,11',
]
usercnt = 1
viewcnt = 0
for i in range(12):
    if len(stream[i]) == 18:
        viewcnt = viewcnt + int(stream[i][17:18])
    if len(stream[i]) == 19:
        viewcnt = viewcnt + int(stream[i][18:19])
    if i >= 1 and stream[i][11:16] != stream[i-1][11:16]:
        usercnt += 1
print(viewcnt / usercnt)

#Задание 6. Дана статистика рекламных кампаний по дням. Напишите алгоритм, который по паре дата-кампания ищет значение численного столбца. Т. е. для даты '2018-01-01' и 'google' нужно получить число 25. Считайте, что все комбинации дата-кампания уникальны, а список stats легко помещается в оперативной памяти.

a = str(input('введите дату в формате гггг-мм-дд'))
b = str(input('введите компанию'))
stats = [
    ['2018-01-01', 'google', 25],
    ['2018-01-01', 'yandex', 65],
    ['2018-01-01', 'market', 89],
    ['2018-01-02', 'google', 574],
    ['2018-01-02', 'yandex', 249],
    ['2018-01-02', 'market', 994],
    ['2018-01-03', 'google', 1843],
    ['2018-01-03', 'yandex', 1327],
    ['2018-01-03', 'market', 1764],
]
for i in range(9):
    if a in str(stats[i][0]) and b in str(stats[i][1]):
        print (stats[i][2])
