#Задание 1. Напишите функцию date_range, которая возвращает список дней между датами start_date и end_date. Даты должны вводиться в формате YYYY-MM-DD.
#Задание 2. Дополните функцию из первого задания проверкой на корректность дат. В случае неверного формата или если start_date > end_date должен возвращаться пустой список.

def date_range(start_date, end_date):
    try:
        start_date_dt = datetime.strptime(start_date, '%Y-%m-%d')
        end_date_dt = datetime.strptime(end_date, '%Y-%m-%d')
    
        if start_date_dt > end_date_dt:
            print('[]')
        else:
            current_dt = start_date_dt + timedelta(days=1)
            while current_dt < end_date_dt:
                print((current_dt.strftime('%d.%m.%Y')))
                
                current_dt += timedelta(days=1)
    except:
        print('[]')
    
    return

date_range('2019-01-01', '2019-01-09')
"""
OUT:
02.01.2019
03.01.2019
04.01.2019
05.01.2019
06.01.2019
07.01.2019
08.01.2019
"""

"""
Задание 3. Дан поток дат в формате YYYY-MM-DD, в которых встречаются некорректные значения:
stream = [‘2018-04-02’, ‘2018-02-29’, ‘2018-19-02’]

Напишите функцию, которая проверяет эти даты на корректность. Т. е. для каждой даты возвращает True (дата корректна) или False (некорректная дата).
"""
stream = ['2018-04-02', '2018-02-29', '2018-19-02']
def check_date(list_):
    result = []
    for i in range(len(list_)):
        try:
            list_[5:7] = '02'
            if list_[i] > list_[i+1]:
                result.append('False')
            else:
                result.append('True')
        except:
            result.append('False')
    return result
check_date(stream)

#OUT: ['False', 'True', 'False']

#Задание 4. Напишите функцию, которая возвращает список дат с 1 по вчерашний день текущего месяца. Если дан 1 день месяца, то возвращается список дней прошлого месяца.

def date_range(start_date, end_date):
    start_date_dt = datetime.strptime(start_date, '%Y-%m-%d')
    end_date_dt = datetime.strptime(end_date, '%Y-%m-%d')
    
    if start_date_dt == end_date_dt:
        start_date_dt -= timedelta(days=31)
        current_dt = start_date_dt
        if current_dt.strftime('%d.%m.%Y') != current_dt.strftime('01.%m.%Y'):
            current_dt += timedelta(days=1)
        while current_dt < end_date_dt:
            print((current_dt.strftime('%d.%m.%Y')))
            current_dt += timedelta(days=1)
    else:
        current_dt = start_date_dt
        while current_dt < end_date_dt:
            print((current_dt.strftime('%d.%m.%Y')))
                
            current_dt += timedelta(days=1)
    
    return

date_range('2019-07-01', '2019-07-01')
"""
OUT:
01.06.2019
02.06.2019
03.06.2019
04.06.2019
05.06.2019
06.06.2019
07.06.2019
08.06.2019
09.06.2019
10.06.2019
11.06.2019
12.06.2019
13.06.2019
14.06.2019
15.06.2019
16.06.2019
17.06.2019
18.06.2019
19.06.2019
20.06.2019
21.06.2019
22.06.2019
23.06.2019
24.06.2019
25.06.2019
26.06.2019
27.06.2019
28.06.2019
29.06.2019
30.06.2019
"""
